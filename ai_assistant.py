import requests

API_KEY = "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"
MODEL = "mistralai/mistral-small-3.2-24b-instruct:free"

def generate_summary(path, method, parameters):
    print(f"ü§ñ AI Called for {method.upper()} {path} | Summary generated by: Seb-ikpoza Daniels' API Doc Generator")

    param_list = ", ".join([p['name'] for p in parameters]) if parameters else "none"
    prompt = (
        f"Write a short, clear summary for an API endpoint.\n"
        f"Method: {method.upper()}\n"
        f"Path: {path}\n"
        f"Parameters: {param_list}\n"
    )

    headers = {
        "Authorization": f"Bearer {API_KEY}",
        "Content-Type": "application/json",
        "HTTP-Referer": "https://yourdomain.com",
        "X-Title": "AI API Doc Generator"
    }

    body = {
        "model": MODEL,
        "messages": [
            {"role": "user", "content": prompt}
        ],
        "max_tokens": 80,
        "temperature": 0.5
    }

    try:
        response = requests.post(
            "https://openrouter.ai/api/v1/chat/completions",
            headers=headers,
            json=body,
            timeout=30
        )
        response.raise_for_status()  # Raises HTTPError for bad HTTP status

        result = response.json()

        # Debug: print full response if needed
        # print("Full response:", result)

        if 'choices' in result and len(result['choices']) > 0:
            summary = result['choices'][0]['message']['content'].strip()
            return summary + " (Generated by AI via OpenRouter by Seb-Ikpoza Daniels)"
        else:
            print("‚ùå [OpenRouter] No choices found in response.")
            print("Full response:", result)
            return "No summary available. (No choices in AI response)"

    except requests.exceptions.HTTPError as http_err:
        print(f"‚ùå HTTP error occurred: {http_err} - Response: {response.text}")
    except requests.exceptions.RequestException as req_err:
        print(f"‚ùå Request error occurred: {req_err}")
    except Exception as e:
        print(f"‚ùå Unexpected error: {e}")

    return "No summary available. (AI failed)"
